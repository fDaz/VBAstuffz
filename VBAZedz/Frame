Private pstats As New Scripting.Dictionary
Private bColl As New Scripting.Dictionary
Private zColl As New Scripting.Dictionary
Private iColl As New Scripting.Dictionary
Private zStat As New Scripting.Dictionary
Private Pews As New Scripting.Dictionary
Private Pwrs As New Collection
Private Perks As New Collection
Private player As Image, healthBar As Image, healthFrame As Image, relBar As Image, relFrame As Image, powBar As Image
Private Pts As Integer, nextLvl As Integer, lvlUp As Integer, freePerk As Integer, Health As Integer, speed As Double, shots As Integer, zeds As Integer, items As Integer, currAmm As Integer, wpnchance As Integer, powchance As Integer, powtime As Integer, burst As Integer
Private fpsTime As Double, fps As Integer, firx As Double, firy As Double, spawn As Double, spawnmax As Double, fcyc As Double, relcount As Double
Private upk As Integer, downk As Integer, rightk As Integer, leftk As Integer
Private firing As Boolean, reload As Boolean, switched As Boolean, inmenu As Boolean
Private running As Boolean
Private Ptstext, Ptslbl, Pewlbl, Ammotext, Ammlbl, HpT, perkLbl, fpsLbl, perkOpt1, perkOpt2, perkOpt3

Sub construct(inwidth, inheight)

Me.width = inwidth + 15
Me.height = inheight + 50
Me.Caption = "Pew"

Me.Show (0)

Frame1.Caption = ""
Frame1.left = 5
Frame1.top = 25
Frame1.width = inwidth
Frame1.height = inheight
Frame1.BackColor = RGB(224, 224, 224)
Frame1.MousePointer = fmMousePointerCross

Set Ptstext = Me.Controls.Add("Forms.Label.1", "Ptstext")
Ptstext.Caption = "Points:"
Ptstext.top = 6
Ptstext.left = 10

Set Ptslbl = Me.Controls.Add("Forms.Label.1", "Ptslbl")
Ptslbl.Caption = "NA"
Ptslbl.top = 6
Ptslbl.left = 42
Ptslbl.width = 18

Set Pewlbl = Me.Controls.Add("Forms.Label.1", "Pewlbl")
Pewlbl.Caption = "NA"
Pewlbl.top = 6
Pewlbl.left = 72

Set Ammotext = Me.Controls.Add("Forms.Label.1", "Ammotext")
Ammotext.Caption = "Ammo:"
Ammotext.top = 6
Ammotext.left = 115

Set Ammlbl = Me.Controls.Add("Forms.Label.1", "Ammlbl")
Ammlbl.Caption = "NA"
Ammlbl.top = 6
Ammlbl.left = 145

Set HpT = Me.Controls.Add("Forms.Label.1", "HpT")
HpT.Caption = "Health:"
HpT.top = 6
HpT.left = Me.width - 150

Set perkLbl = Me.Controls.Add("Forms.Label.1", "perkLbl")
perkLbl.width = 130
perkLbl.Caption = "Perk points avaliable! (press space)"
perkLbl.top = 6
perkLbl.left = 300
perkLbl.Visible = False

Set fpsLbl = Me.Frame1.Add("Forms.Label.1", "fpsLbl")
fpsLbl.Caption = "FPS: "
fpsLbl.top = 0
fpsLbl.left = 5
fpsLbl.Enabled = False
fpsLbl.Visible = False

Set perkOpt1 = Me.Frame1.Add("Forms.Label.1", "perkOpt1")
With perkOpt1
.width = 400
.height = 27
.BackColor = RGB(230, 230, 230)
.Font.Size = 10
.Caption = "1) Perk Option 1: Perk description goes here, so you can know what you will pick (lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum)"
.top = 150
.left = Frame1.width / 2 - perkOpt1.width / 2
.Visible = False
End With

Set perkOpt2 = Me.Frame1.Add("Forms.Label.1", "perkOpt2")
With perkOpt2
.width = 400
.height = 27
.BackColor = RGB(230, 230, 230)
.Font.Size = 10
.Caption = "2) Perk Option 2: Perk description goes here, so you can know what you will pick (lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum)"
.top = 190
.left = Frame1.width / 2 - perkOpt1.width / 2
.Visible = False
End With

Set perkOpt3 = Me.Frame1.Add("Forms.Label.1", "perkOpt3")
With perkOpt3
.width = 400
.height = 27
.BackColor = RGB(230, 230, 230)
.Font.Size = 10
.Caption = "3) Perk Option 3: Perk description goes here, so you can know what you will pick (lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum)"
.top = 230
.left = Frame1.width / 2 - perkOpt1.width / 2
.Visible = False
End With

Call init

End Sub

Private Sub UserForm_Terminate()

End

End Sub

Private Sub Frame1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

Select Case KeyCode
    Case vbKeyW
        upk = 1
    Case vbKeyA
        leftk = 1
    Case vbKeyS
        downk = 1
    Case vbKeyD
        rightk = 1
    Case vbKeyR
        If reload = False Then
            If Pews(pstats("pew"))("fullreload") = True Then
                currAmm = 0
            Else
                reload = True
            End If
        End If
    Case vbKeySpace
        If freePerk > 0 Then
            Call openPerkMenu
        End If
    Case vbKey1, vbKey2, vbKey3
        If inmenu = True Then
            Call selectPerk(KeyCode)
        End If
    Case vbKeyQ
        Pts = Pts + 10
End Select

End Sub

Private Sub Frame1_KeyUp(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)

Select Case KeyCode
    Case vbKeyW
        upk = 0
    Case vbKeyA
        leftk = 0
    Case vbKeyS
        downk = 0
    Case vbKeyD
        rightk = 0
End Select

End Sub

Private Sub Frame1_MouseDown(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

firx = x
firy = y

firing = True

End Sub

Private Sub Frame1_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

If Button = 1 Then
    firx = x
    firy = y
End If

End Sub

Private Sub Frame1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal x As Single, ByVal y As Single)

firing = False
burst = 0

End Sub

Sub init()

running = True
fps = 0
speed = 1.6
Pts = 0
currAmm = 0
relcount = 0
reload = False
switched = False
wpnchance = 1
powchance = 3
powtime = 170
nextLvl = 30
lvlUp = nextLvl
freePerk = 0
burst = 0

Randomize

shots = 0
zeds = 0
items = 0

spawn = 0
spawnmax = 10

pstats.Add "hp", 100
pstats.Add "pew", "pistol"
pstats.Add "hurt", False
fcyc = 999

'Syntax: initPew(name, dam, bsize, spread, proj, pspeed, auto, rof, mag, relspeed, fullreload, piercing)
Call initPew("pistol", 10, 2, 1, 1, 20, False, 2, 12, 60, True, False)
Call initPew("shotgun", 13, 2, 10, 7, 20, False, 2, 6, 35, False, False)
Call initPew("sawnoff", 13, 2, 20, 10, 20, True, 1, 2, 100, True, False)
Call initPew("smg", 10, 2, 3, 1, 20, True, 0.5, 52, 80, True, False)
Call initPew("carbine", 20, 3, 4, 1, 20, True, 1.2, 30, 120, True, False)
Call initPew("rifle", 100, 3, 0.5, 1, 40, False, 6, 5, 100, True, True)
Call initPew("LMG", 15, 3, 8, 1, 20, True, 0.7, 200, 300, True, False)

Call perkList

Pwrs.Add "invul"
Pwrs.Add "supershot"
Pwrs.Add "freeze"
Pwrs.Add "berserk"

Set healthBar = Me.Controls.Add("Forms.Image.1", "HPBar")
With healthBar
.width = pstats("hp")
.height = 12
.top = 6
.left = Me.width - 120
.BackColor = RGB(250, 0, 0)
End With

Set healthFrame = Me.Controls.Add("Forms.Image.1", "HPFrame")
With healthFrame
.width = pstats("hp")
.height = 12
.top = 6
.left = Me.width - 120
.BackStyle = 0
.BorderColor = RGB(0, 0, 0)
.BorderStyle = 1
End With

Set relFrame = Me.Controls.Add("Forms.Image.1", "RelFrame")
With relFrame
.width = 100
.height = 6
.top = 8
.left = 170
.BackStyle = 0
.BorderColor = RGB(0, 0, 0)
.BorderStyle = 1
End With

Set relBar = Me.Controls.Add("Forms.Image.1", "RelBar")
With relBar
.width = 0
.height = 6
.top = 8
.left = 170
.BackColor = RGB(200, 200, 200)
End With

Set powBar = Me.Controls.Add("Forms.Image.1", "powBar")
With powBar
.width = 0
.height = 5
.top = 20
.left = 5
.BackColor = RGB(0, 200, 250)
.BorderStyle = 0
End With

Set player = Frame1.Controls.Add("Forms.Image.1", "Pchar")
With player
.width = 10
.height = 10
.top = Me.height / 2
.left = Me.width / 2
.BackColor = RGB(100, 100, 70)
End With

Ptslbl.Caption = Pts

For i = 1 To 20
    Call spawner
Next

Call main

End Sub

Sub main()

Dim oTime As Double, relinc As Double
oTime = 0.01

Do

tStart = Timer
fps = fps + 1

If powBar.width > 0 Then powBar.width = powBar.width - 0.5

If powBar.width = 1 Then player.BackColor = RGB(100, 100, 70)

If currAmm = 0 Then reload = True

If reload = True Then

    mag = Pews(pstats("pew"))("mag")
    If pstats.Exists(7) Then mag = Int(mag * 1.2)

    If pstats.Exists(3) Then
        relinc = 1.4
    Else
        relinc = 1
    End If
    
    relcount = relcount + relinc
    If powBar.width > 0 And powBar.Tag = "berserk" Then relcount = relcount + relinc * 5
    If relcount >= Pews(pstats("pew"))("relspeed") Then
        If Pews(pstats("pew"))("fullreload") = True Then
            reload = False
            relcount = 0
            currAmm = mag
        Else
            relcount = 0
            currAmm = currAmm + 1
            If currAmm = mag Then reload = False
        End If
    End If
End If

If fcyc < Pews(pstats("pew"))("rof") Then
    If powBar.width > 0 And powBar.Tag = "berserk" Then
        fcyc = fcyc + 0.2
    Else
        fcyc = fcyc + 0.1
    End If
End If

If firing = True And currAmm > 0 Then
    If fcyc >= Pews(pstats("pew"))("rof") Then
        fcyc = 0
        currAmm = currAmm - 1
        For i = 1 To Pews(pstats("pew"))("proj")
            burst = burst + 1
            Call shootGun
            If Pews(pstats("pew"))("fullreload") = False Then
                reload = False
                relcount = 0
            End If
        Next
    End If
    If Pews(pstats("pew"))("auto") = False Then
        firing = False
    End If
Else
    firing = False
End If

If powBar.width > 0 And powBar.Tag = "freeze" Then
    'nothing
Else
    If zColl.count > 0 Then
        For Each zkey In zColl.Keys
            Call checkZed(zkey)
        Next
    End If
    
    spawn = spawn + 0.1

    If spawnmax <= spawn And zColl.count < 45 Then
        spawn = 0
        spawnmax = spawnmax * 0.95
        Call spawner
    End If

End If

If bColl.count > 0 Then
    For Each dkey In bColl.Keys
        Call moveBullet(dkey)
    Next
End If

If iColl.count > 0 Then
    For Each ikey In iColl.Keys
        Call itemCheck(ikey)
    Next
End If

Call movePlayer

healthBar.width = pstats("hp")
relBar.width = relcount / Pews(pstats("pew"))("relspeed") * 100
Pewlbl.Caption = pstats("pew")
Ammlbl.Caption = currAmm

If pstats("hp") <= 0 Then running = False

Do While Timer < tStart + oTime
    DoEvents
Loop

fpsTime = fpsTime + (Timer - tStart)

If fpsTime >= 1 Then
    fpsLbl.Caption = "FPS: " & fps
    fps = 0
    fpsTime = 0
End If

Do While inmenu = True
    DoEvents
Loop

Loop While running = True

MsgBox "Game Over!"

End Sub

Sub spawner()

For i = 0 To 21 * Rnd
    roll = Int((zeds + 1) * Rnd)
Next

whatto = zeds - roll

Select Case whatto
    Case 0 To 20
        Call newZed(1, 5, 58, 10, 20, 250, 20, 140, 10, 1) 'generic trash - slow, weak, wanders around
    Case 31 To 35
        Call newZed(10, 3, 38, 5, 20, 150, 20, 15, 10, 1) 'speedsters start appearing - fast, direct, but weak
    Case 36 To 60
        Call newZed(1, 5, 58, 10, 20, 250, 20, 140, 10, 2) 'generic trash again - for padding
    Case 61 To 69
        Call newZed(8, 3, 48, 5, 20, 150, 20, 20, 10, 2) 'speedster 2 - fast, direct, bit tougher but bit slower as well
    Case 70 To 71
        Call newZed(2, 10, 500, 20, 20, 50, 20, 5, 40, 5) 'the miniboss - strong, direct but slow as shit
    Case 72 To 109
        Call newZed(2, 5, 68, 15, 20, 200, 20, 100, 10, 2) 'stronger trash - like trash but hits harder
    Case 110 To 129
        Call newZed(10, 3, 48, 5, 20, 150, 20, 20, 10, 2) 'speedster 3 - faster better stronger harder
    Case 130 To 189
        Call newZed(2, 5, 68, 15, 20, 200, 20, 100, 10, 2) 'stronger trash again - pad harder
    Case 190 To 191
        Call newZed(4, 10, 800, 25, 20, 50, 20, 5, 40, 10) 'the boss - like the miniboss but worse
    Case Else
        Call newZed(Int(zeds / 50), 3, 78, 10, 20, 150, 20, 80, 5, 3) 'speedtrash: preparte to get rekt
End Select

End Sub

Sub newZed(zSp, bmax, hp, dam, r, g, b, rangle, sight, xp)

Dim zVars As New Scripting.Dictionary

Dim cDir()

zeds = zeds + 1

wfrom = Int(4 * Rnd + 1)

Select Case wfrom
    Case 1 'arrive from up
        xPos = Int((Frame1.width + 21) * Rnd - 10)
        yPos = -10
    Case 2 'arrive from down
        xPos = Int((Frame1.width + 21) * Rnd - 10)
        yPos = Frame1.height + 10
    Case 3 'arrive from left
        xPos = -10
        yPos = Int((Frame1.height + 21) * Rnd - 10)
    Case 4 'arrive from right
        xPos = Frame1.width + 10
        yPos = Int((Frame1.height + 21) * Rnd - 10)
End Select

Set zixl = Frame1.Controls.Add("Forms.Image.1", "Zed" & zeds)

With zixl
.width = 10
.height = 10
.left = xPos
.top = yPos
.BackColor = RGB(r, g, b)
.Tag = zSp
.Enabled = False
End With

cDir = calcDir(zixl.left, zixl.top, player.left, player.top, 0)

zVars.Add "bcount", 0
zVars.Add "bmax", bmax
zVars.Add "hp", hp
zVars.Add "dam", dam
zVars.Add "rangle", rangle
zVars.Add "sight", sight
zVars.Add "rdir", 0
zVars.Add "xdir", cDir(0)
zVars.Add "ydir", cDir(1)
zVars.Add "hurtc", False
zVars.Add "xp", xp

zColl.Add zeds, zixl
zStat.Add zeds, zVars

End Sub

Sub movePlayer()

Dim tempSpeed

If pstats("hurt") = True Then
    HEXcolor = RIGHT("000000" & Hex(player.BackColor), 6)
    red = CInt("&H" & RIGHT(HEXcolor, 2))
    green = CInt("&H" & Mid(HEXcolor, 3, 2))
    blue = CInt("&H" & left(HEXcolor, 2))
    
    red = red - 10
    player.BackColor = RGB(red, green, blue)
        
    If red <= 100 Then
        pstats("hurt") = False
    End If
End If

If upk + leftk + downk + rightk > 1 Then
    tempSpeed = speed * Sin(WorksheetFunction.Pi / 4)
Else
    tempSpeed = speed
End If

If pstats.Exists(2) Then tempSpeed = tempSpeed * 1.1

If upk = 1 And player.top > 2 Then player.top = player.top - tempSpeed
If leftk = 1 And player.left > 2 Then player.left = player.left - tempSpeed
If downk = 1 And player.top < Frame1.height - 12 Then player.top = player.top + tempSpeed
If rightk = 1 And player.left < Frame1.width - 12 Then player.left = player.left + tempSpeed

End Sub

Sub checkZed(n)

Dim cDir()

Dim pQuad As Integer 'format: xy
Dim zQuad As Integer 'format: xy

If zStat(n)("hurtc") = True Then
    HEXcolor = RIGHT("000000" & Hex(zColl(n).BackColor), 6)
    red = CInt("&H" & RIGHT(HEXcolor, 2))
    green = CInt("&H" & Mid(HEXcolor, 3, 2))
    blue = CInt("&H" & left(HEXcolor, 2))
    
    red = red - 10
    zColl(n).BackColor = RGB(red, green, blue)
        
    If red <= 20 Then
        zStat(n)("hurtc") = False
    End If
End If

'decide which area the player is in
pQuad = findQuad(player.left, player.top)

'decide which area the zed is in
zQuad = findQuad(zColl(n).left, zColl(n).top)

'make them wander, but go for it if close enough
detectRad = zStat(n)("sight") * zColl(n).width

If rectOverlap(zColl(n).left - detectRad, zColl(n).top - detectRad, zColl(n).left + zColl(n).width + detectRad, zColl(n).top + zColl(n).height + detectRad, player.left, player.top, player.left + player.width, player.top + player.height) Then
    cDir = calcDir(zColl(n).left, zColl(n).top, player.left, player.top, 0)
    zStat(n)("xdir") = cDir(0)
    zStat(n)("ydir") = cDir(1)
ElseIf Int((101 * Rnd)) < 3 Then
    zStat(n)("rdir") = Int((2 * zStat(n)("rangle") + 1) * Rnd - zStat(n)("rangle")) * WorksheetFunction.Pi / 180
    cDir = calcDir(zColl(n).left, zColl(n).top, player.left, player.top, zStat(n)("rdir"))
    zStat(n)("xdir") = cDir(0)
    zStat(n)("ydir") = cDir(1)
End If

zStat(n)("bcount") = zStat(n)("bcount") + 0.1

    If pQuad = zQuad Then
        If rectOverlap(zColl(n).left - 2, zColl(n).top - 2, zColl(n).left + zColl(n).width + 2, zColl(n).top + zColl(n).height + 2, player.left, player.top, player.left + player.width, player.top + player.height) Then
            
            Call zBit(n)
            
            If pstats.Exists(5) Then
                zStat(n)("hp") = zStat(n)("hp") - zStat(n)("dam") * 2
                Call zHurt(n)
            End If
    
            If zStat(n)("hp") <= 0 Then
                Call removeZed(n)
                Exit Sub
            End If
            
            If rectOverlap(zColl(n).left, zColl(n).top, zColl(n).left + zColl(n).width, zColl(n).top + zColl(n).height, player.left, player.top, player.left + player.width, player.top + player.height) Then
                Exit Sub
            End If
        End If
    End If

    'make them stay in the area
    If zColl(n).left + (zStat(n)("xdir") * zColl(n).Tag / 4) < 0 Then zStat(n)("xdir") = Abs(zStat(n)("xdir"))
    If zColl(n).left + zColl(n).width + (zStat(n)("xdir") * zColl(n).Tag / 4) > Frame1.width Then zStat(n)("xdir") = Abs(zStat(n)("xdir")) * -1

    If zColl(n).top + (zStat(n)("ydir") * zColl(n).Tag / 4) < 0 Then zStat(n)("ydir") = Abs(zStat(n)("ydir"))
    If zColl(n).top + zColl(n).height + (zStat(n)("ydir") * zColl(n).Tag / 4) > Frame1.height Then zStat(n)("ydir") = Abs(zStat(n)("ydir")) * -1
    'make them move
    zColl(n).left = zColl(n).left + (zStat(n)("xdir") * zColl(n).Tag / 4)
    zColl(n).top = zColl(n).top + (zStat(n)("ydir") * zColl(n).Tag / 4)

End Sub

Sub zBit(n)

If zStat(n)("bcount") >= zStat(n)("bmax") Then
    zStat(n)("bcount") = 0
    
    If powBar.Tag = "invul" And powBar.width > 0 Then
    ElseIf pstats.Exists(4) Then
        pstats("hp") = pstats("hp") - (zStat(n)("dam") * 0.75)
    Else
        pstats("hp") = pstats("hp") - zStat(n)("dam")
    End If
    
    If powBar.Tag = "berserk" And powBar.width > 0 Then
    ElseIf powBar.Tag = "invul" And powBar.width > 0 Then
    Else
        HEXcolor = RIGHT("000000" & Hex(player.BackColor), 6)
        red = CInt("&H" & RIGHT(HEXcolor, 2))
        green = CInt("&H" & Mid(HEXcolor, 3, 2))
        blue = CInt("&H" & left(HEXcolor, 2))
        player.BackColor = RGB(250, green, blue)
        pstats("hurt") = True
    End If
    
    If pstats("hp") < 0 Then pstats("hp") = 0
End If

End Sub

Sub zHurt(n)

HEXcolor = RIGHT("000000" & Hex(zColl(n).BackColor), 6)
green = CInt("&H" & Mid(HEXcolor, 3, 2))
blue = CInt("&H" & left(HEXcolor, 2))

zColl(n).BackColor = RGB(200, green, blue)
zStat(n)("hurtc") = True

End Sub

Sub removeZed(n)

Pts = Pts + zStat(n)("xp")
Ptslbl.Caption = Pts

If Pts >= lvlUp And Perks.count > 0 Then
    freePerk = freePerk + 1
    perkLbl.Visible = True
    nextLvl = nextLvl + 30
    lvlUp = lvlUp + nextLvl
End If

If Int((101 * Rnd)) < powchance And iColl.count = 0 Then
    Call placePow(zColl(n).left, zColl(n).top)
End If

If iColl.count = 0 Then
    If pstats("pew") = "pistol" And Int((101 * Rnd)) < 70 Then
        Call placeWpn(zColl(n).left, zColl(n).top)
    ElseIf Int((101 * Rnd)) < wpnchance Then
        Call placeWpn(zColl(n).left, zColl(n).top)
    End If
End If

Frame1.Controls.Remove zColl.Item(n).name
zColl.Remove n
zStat.Remove n

End Sub

Sub shootGun()

Dim cDir()

spread = Int((2 * Pews(pstats("pew"))("spread") + 1) * Rnd - Pews(pstats("pew"))("spread")) * WorksheetFunction.Pi / 180

If burst < 5 And Pews(pstats("pew"))("auto") = True Then
    spread = spread * burst / 5
End If

damage = Pews(pstats("pew"))("dam") + Int(((50 / Pews(pstats("pew"))("dam")) + 1) * Rnd)

If pstats.Exists(1) Then damage = Int(damage * 1.5)

cDir = calcDir(player.left + 5, player.top + 5, firx, firy, spread)

shots = shots + 1

Set blt = Frame1.Controls.Add("Forms.Image.1", "Boolit" & shots)

With blt
.width = Pews(pstats("pew"))("bsize")
.height = Pews(pstats("pew"))("bsize")
.left = player.left + 5
.top = player.top + 5
.BackColor = RGB(0, 0, 0)
.Tag = cDir(0) & ";" & cDir(1) 'format: xdir;ydir
.ControlTipText = Pews(pstats("pew"))("pspeed") & ";" & damage 'format: speed;damage
End With

If Pews(pstats("pew"))("piercing") = False Then blt.BorderStyle = 0

If powBar.width > 0 And powBar.Tag = "supershot" Then
    With blt
        .width = 4
        .height = 4
        .BackColor = RGB(200, 200, 0)
        .BorderStyle = 1
        .BorderColor = RGB(0, 0, 0)
        .ControlTipText = Pews(pstats("pew"))("pspeed") & ";" & "9999" 'format: speed;damage
    End With
End If

bColl.Add shots, blt

End Sub

Sub moveBullet(n)

xNew = left(bColl(n).Tag, InStr(bColl(n).Tag, ";") - 1) * left(bColl(n).ControlTipText, InStr(bColl(n).ControlTipText, ";") - 1)
yNew = Mid(bColl(n).Tag, InStr(bColl(n).Tag, ";") + 1) * left(bColl(n).ControlTipText, InStr(bColl(n).ControlTipText, ";") - 1)

Dim bQuad As Integer 'format: xy
Dim toQuad As Integer 'same, but for the destination
Dim zedList As New Collection 'the lists of zeds to check for

'decide which area the blt and the destination is in
bQuad = findQuad(bColl(n).left, bColl(n).top)
toQuad = findQuad(bColl(n).left + xNew, bColl(n).top + xNew)

'get which Zeds are in that quad
For Each zkey In zColl.Keys
    
    zQuad = findQuad(zColl(zkey).left, zColl(zkey).top)
    
    If zQuad = bQuad Then
            zedList.Add zkey
    End If
    If toQuad <> bQuad Then 'only check for destination if it differs from the blt
        If zQuad = toQuad Then
            zedList.Add zkey
        End If
    End If
Next

If zedList.count > 0 Then

For k = 1 To zedList.count
    If intersectRect(bColl(n).left + bColl(n).width / 2, bColl(n).top + bColl(n).height / 2, bColl(n).left + bColl(n).width / 2 + xNew, bColl(n).top + bColl(n).height / 2 + yNew, zColl(zedList(k)).left, zColl(zedList(k)).top, zColl(zedList(k)).left + zColl(zedList(k)).width, zColl(zedList(k)).top + zColl(zedList(k)).height) = True Then
        zStat(zedList(k))("hp") = zStat(zedList(k))("hp") - Mid(bColl(n).ControlTipText, InStr(bColl(n).ControlTipText, ";") + 1)
        
        zHurt (zedList(k))
        
        If zStat(zedList(k))("hp") <= 0 Then
            Call removeZed(zedList(k))
        End If

        If bColl(n).BorderStyle = 0 Then
            If pstats.Exists(11) And Int(Rnd * 101) < 20 Then
            Else
                Call removeBult(n)
                Exit Sub
            End If
        End If
        
    End If
Next

End If

bColl(n).left = bColl(n).left + xNew
bColl(n).top = bColl(n).top + yNew

If bColl(n).top > Frame1.height Or bColl(n).top < 0 Or bColl(n).left > Frame1.width Or bColl(n).left < 0 Then
    Call removeBult(n)
    Exit Sub
End If
    
End Sub

Sub removeBult(b)
    Frame1.Controls.Remove bColl(b).name
    bColl.Remove b
End Sub

Sub placeWpn(xIt, yIt)

Do
what = Int((Pews.count - 1) * Rnd + 1)
Debug.Print pstats("pew")
Debug.Print Pews.Keys(what)
Loop Until pstats("pew") <> Pews.Keys(what)


items = items + 1
Set itm = Frame1.Controls.Add("Forms.Label.1", "Item" & items)

With itm
.width = 30
.height = 12
.left = xIt
.top = yIt
.BackColor = RGB(250, 250, 0)
.TextAlign = 2
.SpecialEffect = 1
.Enabled = False
.Caption = left(Pews.Keys(what), 5)
.Tag = Pews.Keys(what)
.ControlTipText = 0
End With

itm.ZOrder msoSendToBack

iColl.Add items, itm

End Sub

Sub placePow(xIt, yIt)

what = Int(Pwrs.count * Rnd + 1)

items = items + 1
Set itm = Frame1.Controls.Add("Forms.Label.1", "Item" & items)

With itm
.width = 10
.height = 10
.left = xIt
.top = yIt
.BackColor = RGB(0, 200, 250)
.TextAlign = 2
.SpecialEffect = 1
.Enabled = False
.Caption = "!"
.Tag = Pwrs(what)
.ControlTipText = 0
End With

itm.ZOrder msoSendToBack

iColl.Add items, itm

End Sub

Sub itemCheck(n)

iColl(n).ControlTipText = iColl(n).ControlTipText + 0.5

If iColl(n).width = 30 Then
    iColl(n).BackColor = RGB(250, 250, iColl(n).ControlTipText)
Else
    iColl(n).BackColor = RGB(iColl(n).ControlTipText, 200, 250)
End If

If iColl(n).ControlTipText > 245 Then
    Frame1.Controls.Remove iColl.Item(n).name
    iColl.Remove n
    Exit Sub
End If

If rectOverlap(iColl(n).left, iColl(n).top, iColl(n).left + iColl(n).width, iColl(n).top + iColl(n).height, player.left, player.top, player.left + player.width, player.top + player.height) Then
    Randomize
    If iColl(n).width = 30 Then
        pstats("pew") = iColl(n).Tag
        currAmm = 0
        relcount = 0
        Frame1.Controls.Remove iColl.Item(n).name
        iColl.Remove n
        Exit Sub
    ElseIf powBar.width = 0 Then
        powBar.width = powtime
        powBar.Tag = iColl(n).Tag
        If powBar.Tag = "invul" Then player.BackColor = RGB(250, 250, 50)
        If powBar.Tag = "berserk" Then player.BackColor = RGB(250, 0, 0)
        Frame1.Controls.Remove iColl.Item(n).name
        iColl.Remove n
        Exit Sub
    End If
End If

End Sub

Sub initPew(name, dam, bsize, spread, proj, pspeed, auto, rof, mag, relspeed, fullreload, piercing)

Dim pewStats As New Scripting.Dictionary

With pewStats
.Add "dam", dam
.Add "bsize", bsize
.Add "spread", spread
.Add "proj", proj
.Add "pspeed", pspeed
.Add "auto", auto
.Add "rof", rof
.Add "mag", mag
.Add "relspeed", relspeed
.Add "fullreload", fullreload
.Add "piercing", piercing
End With

Pews.Add name, pewStats

End Sub

Sub perkList()

'How to look for effect: search "If pstats.Exists(ID) Then"
Call initPerk(1, "Full Metal Jacket", "Higher grade bullets means more hurt.") 'done
Call initPerk(2, "Sprinter", "Run even faster than before!") 'done
Call initPerk(3, "Faster Reload", "You know how to quickly swap an empty mag or load shells in rapid succession.") 'done
Call initPerk(4, "Tough Skin", "Just a scratch - enemies hurt you less.") 'done
Call initPerk(5, "Vest of Thorns", "They just can't hurt you without hurting themselves as well.") 'done
'Call initPerk(6, "Jinxed", "Bad things tend to happen to you, or around you.")
Call initPerk(7, "Ammo Squeezer", "Somehow you manage to load 20% more bullets in your magazines.") 'done
'Call initPerk(8, "Stimpack", "Heals you a little. But beware of the side effects...")
'Call initPerk(9, "Nuke Vest", "Go out with a bang - bringing everyone else down with you.")
Call initPerk(10, "Experienced", "You get 30 points. Here and now.") 'done
Call initPerk(11, "Exit wound", "Sometimes your shots just go clean through.") 'done
Call initPerk(12, "Fresh start", "A fresh start for you - but not for anyone else.")

End Sub
Sub initPerk(id As Integer, name As String, desc As String)

Dim perkStats As New Scripting.Dictionary

With perkStats
.Add "id", id
.Add "name", name
.Add "desc", desc
End With

Perks.Add perkStats

End Sub

Sub openPerkMenu()

Randomize

what1 = Int(Perks.count * Rnd + 1)

i = 0
Do
i = i + 1
what2 = Int(Perks.count * Rnd + 1)
If i > 100 Then
    perkOpt2.Tag = "NA"
    Exit Do
End If
Loop Until what1 <> what2

i = 0
Do
i = i + 1
what3 = Int(Perks.count * Rnd + 1)
If i > 100 Then
    perkOpt3.Tag = "NA"
    Exit Do
End If
Loop Until what1 <> what2 And what1 <> what3 And what2 <> what3

If perkOpt1.Tag <> "NA" Then
With perkOpt1
.Tag = Perks(what1)("id")
.Caption = "1) " & Perks(what1)("name") & ": " & Perks(what1)("desc")
.Visible = True
.ZOrder msoBringToFront
End With
End If

If perkOpt2.Tag <> "NA" Then
With perkOpt2
.Tag = Perks(what2)("id")
.Caption = "2) " & Perks(what2)("name") & ": " & Perks(what2)("desc")
.Visible = True
.ZOrder msoBringToFront
End With
End If

If perkOpt3.Tag <> "NA" Then
With perkOpt3
.Tag = Perks(what3)("id")
.Caption = "3) " & Perks(what3)("name") & ": " & Perks(what3)("desc")
.Visible = True
.ZOrder msoBringToFront
End With
End If

inmenu = True
            
End Sub

Sub selectPerk(key)

Select Case key
    Case vbKey1
        If perkOpt1.Tag = "NA" Then Exit Sub
        pstats.Add Int(perkOpt1.Tag), True
        Call removePerk(Int(perkOpt1.Tag))
    Case vbKey2
        If perkOpt2.Tag = "NA" Then Exit Sub
        pstats.Add Int(perkOpt2.Tag), True
        Call removePerk(Int(perkOpt2.Tag))
    Case vbKey3
        If perkOpt3.Tag = "NA" Then Exit Sub
        pstats.Add Int(perkOpt3.Tag), True
        Call removePerk(Int(perkOpt3.Tag))
End Select

If pstats.Exists(10) Then
    Pts = Pts + 30
    Ptslbl.Caption = Pts
    pstats.Remove (10)
End If

If pstats.Exists(12) Then
    pstats.RemoveAll
    
    For i = 1 To Perks.count
        Perks.Remove 1
    Next
    
    Call perkList

    pstats.Add "hp", 100
    pstats.Add "pew", "pistol"
    pstats.Add "hurt", False
    currAmm = 0
    relcount = 0
    Call removePerk(12)
End If

freePerk = freePerk - 1
If freePerk = 0 Then perkLbl.Visible = False

perkOpt1.Visible = False
perkOpt2.Visible = False
perkOpt3.Visible = False
inmenu = False

End Sub

Sub removePerk(id)

For i = 1 To Perks.count
    If id = Perks(i)("id") Then
        Perks.Remove i
        Exit Sub
    End If
Next

End Sub

Function calcDir(x1, y1, x2, y2, spread)

Dim dist, dX, dY, retCoor(1), t, u As Double
Dim dirX, dirY As Integer

dX = x2 - x1
dY = y2 - y1

dirX = Sgn(dX)
dirY = Sgn(dY)

dX = Abs(dX)
dY = Abs(dY)

dist = Sqr(dX ^ 2 + dY ^ 2)

If dX = 0 Then
    t = 0
ElseIf dY = 0 Then
    t = WorksheetFunction.Pi / 2
Else
    t = arcCos((dist ^ 2 + dX ^ 2 - dY ^ 2) / (2 * dist * dX))
End If

t = t + spread

u = WorksheetFunction.Pi / 2 - t

retCoor(0) = Sin(u) * dirX
retCoor(1) = Sin(t) * dirY

calcDir = retCoor

End Function

Function rectOverlap(x1, y1, x2, y2, a1, b1, a2, b2)

If x1 > a2 Or a1 > x2 Then
    rectOverlap = False
ElseIf y1 > b2 Or b1 > y2 Then
    rectOverlap = False
Else
    rectOverlap = True
End If

End Function

Function intersectRect(x1, y1, x2, y2, a1, b1, a2, b2)

'Just use a heavily butchered version of the Cohen–Sutherland algorithm

outCode1 = getOutCode(x1, y1, a1, b1, a2, b2)
outCode2 = getOutCode(x2, y2, a1, b1, a2, b2)

If (outCode1 And outCode2) = 0 Then 'both end of the segment is inside the rectangle or at different segments - intersects
    intersectRect = True
    Exit Function
Else 'both end of the segment is on the same side of the rectangle - doesnt intersect
    intersectRect = False
    Exit Function
End If

End Function

Function getOutCode(x, y, a1, b1, a2, b2)

'codeIn = 0 ' 0000
'codeLeft = 1 ' 0001
'codeRight = 2 ' 0010
'codeBottom = 4 ' 0100
'codetop = 8 ' 1000

code = 0

If x < a1 Then
    code = code Or 1
ElseIf x > a2 Then
    code = code Or 2
End If

If y < b1 Then
    code = code Or 4
ElseIf y > b2 Then
    code = code Or 8
End If

getOutCode = code

End Function

Function findQuad(x, y)

Dim retq As Integer

If x < Frame1.width / 2 Then 'x is 1 or 2
    If x < Frame1.width / 4 Then 'x is 1
        retq = 10
    Else 'x is 2
        retq = 20
    End If
Else 'x is 3 or 4
    If x > Frame1.width / 4 * 3 Then 'x is 4
        retq = 40
    Else 'x is 3
        retq = 30
    End If
End If

If y < Frame1.height / 2 Then 'y is 1 or 2
    If y < Frame1.height / 4 Then 'y is 1
        retq = retq + 1
    Else 'y is 2
        retq = retq + 2
    End If
Else 'y is 3 or 4
    If y > Frame1.height / 4 * 3 Then 'y is 4
        retq = retq + 4
    Else 'y is 3
        retq = retq + 3
    End If
End If

findQuad = retq

End Function

Function arcCos(x)

arcCos = Atn(-x / Sqr(-x * x + 1)) + 2 * Atn(1)

End Function
